@load ./hash

module FileAnalysis;

export {
	redef enum Action += { ACTION_MHR_CHECK };
	
	global hash_md5_actions: set[Action] = {ACTION_HASH_MD5};
	redef action_dependencies += { [ACTION_MHR_CHECK] = hash_md5_actions };
	
	redef enum Notice::Type += { 
		## The MD5 sum of a file matched in the
		## malware hash registry.
		Malware_Hash_Registry_Match
	};
	
	redef record Info += {
		mhr_match:    bool &log &optional;
	};
}

event FileAnalysis::trigger(f: Info, trig: Trigger) &priority=-5
	{
	if ( trig == IDENTIFIED_MD5 && ACTION_MHR_CHECK in f$actions )
		{
		local hash_domain = fmt("%s.malware.hash.cymru.com", f$md5);
		#print fmt("check: %s", hash_domain);
		when ( local addrs = lookup_hostname(hash_domain) )
			{
			# 127.0.0.2 indicates that the md5 sum was found in the MHR.
			if ( 127.0.0.2 !in addrs )
				{
				local cid: conn_id;
				# This is a hack to just get one of the conn_ids.
				for ( tmp_cid in f$cids )
					cid = tmp_cid;
				#local url = HTTP::build_url_http(rec);
				local message = fmt("%s %s", cid$orig_h, f$md5);
				NOTICE([$note=Malware_Hash_Registry_Match,
				        $msg=message, $id=cid]);
				}
			}
		}
	}